<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;
use App\CommentCollection;
use App\Blog;
class Comment extends Model
{
    protected $guarded = [];

    /**
    * A comment belongs to a blog
    *
    */
    public function blog()
    {
        return $this->belongsTo(Blog::class);
    }

     /**
    * A comment belongs to a user
    *
    */
    public function user()
    {
        return $this->belongsTo(User::class);
    }

    /**
     * Has-many relation with comments (replies)
     */
    public function replies() {
        return $this->hasMany(Comment::class, '
        
        ');
    }

    public function newCollection(array $models = [])
    {
        return new CommentCollection($models); // TODO: Change the autogenerated stub
    }
    public function getMostCommentedPost($user_id) {
        $blog_model = new Blog;
        $comment_model = new Comment;
        $blog_list = $blog_model->where('user_id', $user_id)->select('id')->get();
        $blog_count = Comment::whereIn('blog_id', $blog_list)->select(DB::raw('count(*) as total, blog_id'))->groupBy('blog_id')->orderBy('total', 'DESC')->get()[0]->total;
        return $blog_count;
    }

}
